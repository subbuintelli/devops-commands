#############################################################################################3
### install ELK
apt-get update
apt-get install openjdk-8-jdk -y
apt-get install nginx -y
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list
sudo apt update
sudo apt install elasticsearch

sudo apt install kibana

sudo apt install logstash

sudo apt install filebeat
=========================================================================================================================
###############Configuration

###  vi /etc/elasticsearch/elasticsearch.yml
. . .

		name" : "node-1
		cluster_name" : "my-application
network.host: localhost
	http.port: 9200


. . .


sudo systemctl start elasticsearch
sudo systemctl status elasticsearch

##########

curl -X GET "localhost:9200"


##### vi /etc/kibana/kibana.yml

server.port: 5601
server.host: localhost

########


sudo systemctl start kibana
sudo systemctl status kibana


echo "kibanaadmin:`openssl passwd -apr1`" | sudo tee -a /etc/nginx/htpasswd.users


### vi /etc/nginx/sites-available/default                # can take backup first

server {
    listen 80;

    server_name 192.168.56.110;

    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/htpasswd.users;

    location / {
        proxy_pass http://localhost:5601;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
########################################

sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
sudo nginx -t


sudo systemctl restart nginx
sudo systemctl status nginx

sudo ufw allow 'Nginx Full' (optional)
===================================================================
# https://logz.io/blog/kibana-tutorial/
cd
sudo wget https://logz.io/sample-data

cp sample-data /home/vagrant/apache.log
cd /etc/logstash/conf.d

vi apache.conf

input {
  file {
    path => "/home/vagrant/apache.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}
filter {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
    geoip {
      source => "clientip"
    }
}
output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => petclinic-prod-01
  }
}

sudo service logstash restart
sudo service logstash status

# access kibana at dashboard - http://192.168.56.130
